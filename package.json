{
  "name": "express-ts-swagger-docker",
  "version": "0.0.2",
  "description": "Express.js TypeScript Swagger UI and Docker Compose",
  "main": "src/main.ts",
  "dependencies": {
    "@babel/polyfill": "^7.12.1",
    "bcrypt": "^5.0.0",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.19.0",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "debug": "~2.6.9",
    "dotenv": "^8.2.0",
    "ejs": "^3.0.1",
    "express": "^4.17.1",
    "express-validator": "^6.6.1",
    "helmet": "^3.21.2",
    "http-errors": "~1.6.3",
    "jsonwebtoken": "^8.5.1",
    "make-runnable": "^1.3.8",
    "moment": "^2.29.1",
    "morgan": "~1.9.1",
    "pg": "^7.18.2",
    "pg-hstore": "^2.3.3",
    "pug": "2.0.0-beta11",
    "sequelize": "^5.22.3"
  },
  "devDependencies": {
    "@types/bcrypt": "^3.0.0",
    "@types/body-parser": "^1.19.0",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.8",
    "@types/es6-promise": "^3.3.0",
    "@types/express": "^4.17.8",
    "@types/express-validator": "^3.0.0",
    "@types/fs-extra": "^9.0.2",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/node": "^12.19.2",
    "@types/sequelize": "^4.28.9",
    "@types/shelljs": "^0.8.8",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.3",
    "babel-preset-env": "^1.7.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-register": "^6.26.0",
    "babel-watch": "^7.0.0",
    "fs-extra": "^9.0.1",
    "nodemon": "^2.0.6",
    "npm-run-all": "^4.1.5",
    "rimraf": "^3.0.2",
    "shelljs": "^0.8.4",
    "ts-node": "^9.0.0",
    "tslint": "^5.20.0",
    "tsoa": "^2.5.13",
    "typescript": "^3.9.7"
  },
  "scripts": {
    "clean": "rimraf dist/*",
    "copy-assets": "ts-node tools/copyAssets",
    "lint": "tslint -c tslint.json -p tsconfig.json --fix",
    "tsc": "tsc -p .",
    "build": "npm-run-all clean tsc copy-assets",
    "dev:start": "npm-run-all build start",
    "dev": "nodemon --watch src -e ts,ejs --exec npm run dev:start",
    "start": "node dist/main.js",
    "build:routes": "mkdir -p src/routes && tsoa routes",
    "build:swagger": "mkdir -p api && mkdir -p api/dist && tsoa swagger",
    "build:ts": "tsc -p .",
    "build:all": "npm run build:routes && npm run build:swagger && npm run build",
    "server": "node dist/main.js",
    "docker:build": "docker build -t tipparat/backend .",
    "docker:run": "docker run -p 3000:3000 tipparat/backend"
  }
}
